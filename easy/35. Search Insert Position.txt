/*
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You may assume no duplicates in the array.
Example 1:
Input: [1,3,5,6], 5
Output: 2

//Note: simple binary search practice
*/

class Solution {
public:
    int searchInsert(vector<int>& nums, int target)
	{
		int result = -1;
		if (!nums.empty())
		{
			result = bSearchInsert(nums, target, 0, nums.size()-1);
		}
        return result;
    }
	int bSearchInsert(vector<int>& nums, const int target, const int left, const int right)
	{
		if (left > right)
		{
			return left;
		}
		int mid = (left+right)/2;
		if (nums[mid] == target)
		{
			return mid;
		}
		else if(target < nums[mid])
		{
			return bSearchInsert(nums, target, left, mid-1);
		}
		else
		{
			return bSearchInsert(nums, target, mid+1, right);
		}
	}
};