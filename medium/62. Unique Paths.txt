/*
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?



Above is a 3 x 7 grid. How many possible unique paths are there?

Note: m and n will be at most 100.
*/

class Solution {
public:
    int uniquePaths(int m, int n) {
		vector<int> single_line(m,0);
		vector<vector<int>> value_map(n,single_line);
		int result = 0;
		if (m > 0 && n > 0)
		{
			value_map[0][0] = 1;
			for (int i = 0; i < n; ++i)
			{
				for (int j = 0; j < m; ++j)
				{
					if (i > 0)
					{
						value_map[i][j] += value_map[i-1][j];
					}
					if (j > 0)
					{
						value_map[i][j] += value_map[i][j-1];
					}
				}
			}
			result = value_map[n-1][m-1];
		}
		
		return result;
	}
};