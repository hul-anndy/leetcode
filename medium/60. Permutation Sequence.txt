/*
The set [1,2,3,бн,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Note: Given n will be between 1 and 9 inclusive.

Note:
Calculate one by one.
*/

class Solution {
public:
	string getPermutation(int n, int k) {
		string result;
		if (n > 0)
		{
			k--;
			vector<int> format(n);
			vector<int> total_number(n, 1);
			for (int i = 1; i < n; ++i)
			{
				total_number[i] = total_number[i - 1] * (i+1);
			}
			for (int i = 1; i <= n; ++i)
			{
				format[i-1] = i;
			}
			for (int i = n - 1; i > 0; --i)
			{
				int digit_index = k / total_number[i-1];
				result.push_back(int2Char(format[digit_index]));
				format.erase(format.begin()+ digit_index);
				k = k % total_number[i-1];
			}
			result.push_back(int2Char(format[0]));
		}
		return result;
	}
	char int2Char(int digit)
	{
		return '0' + (digit % 10);
	}
};